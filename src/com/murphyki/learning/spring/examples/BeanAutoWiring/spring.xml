<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
        "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<!--
	A number of options exist for bean auto wiring:
	1) default	
	This is default setting which means no autowiring and you should use explicit 
	bean reference for wiring. You have nothing to do special for this wiring. 
	This is what you already have seen in Dependency Injection chapter.
	2) byName
	Autowiring by property name. Spring container looks at the properties of the 
	beans on which autowire attribute is set to byName in the XML configuration file. 
	It then tries to match and wire its properties with the beans defined by the same 
	names in the configuration file.
	3) byType
	Autowiring by property datatype. Spring container looks at the properties of the 
	beans on which autowire attribute is set to byType in the XML configuration file. 
	It then tries to match and wire a property if its type matches with exactly one of 
	the beans name in configuration file. If more than one such beans exists, a fatal 
	exception is thrown.
	4) constructor
	Similar to byType, but type applies to constructor arguments. If there is not exactly 
	one bean of the constructor argument type in the container, a fatal error is raised.
	5) autodetect
	Spring first tries to wire using autowire by constructor, if it does not work, Spring 
	tries to autowire by byType. 
 -->
<beans>
	<bean id="triangle" autowire="byName" class="com.murphyki.learning.spring.examples.BeanAutoWiring.Triangle">
		<property name="type" value="Scalene" />
	</bean>
	
	<bean id="pointA" class="com.murphyki.learning.spring.examples.BeanAutoWiring.Point">
		<property name="x" value="0" />
		<property name="y" value="0" />
	</bean>
	
	<bean id="pointB" class="com.murphyki.learning.spring.examples.BeanAutoWiring.Point">
		<property name="x" value="10" />
		<property name="y" value="0" />
	</bean>
	
	<bean id="pointC" class="com.murphyki.learning.spring.examples.BeanAutoWiring.Point">
		<property name="x" value="0" />
		<property name="y" value="10" />
	</bean>
	
</beans>